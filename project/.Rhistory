pwd
pwd()
install.packages("bnlearn")
library(bnlearn)
setwd("~/Google Drive/course work/SU5050/project")
data<-read.csv("./file_phoe.csv")
View(data)
summary(data[,8])
data$street<-as.factor(data$street)
data$lot<-as.factor(data$lot)
dsBase.iqr <- data
# Create a variable/vector/collection of the column names you want to remove outliers on.
vars <- c("score")
# Create a variable to store the row id's to be removed
Outliers <- c()
# Loop through the list of columns you specified
for(i in vars){
# Get the Min/Max values
max <- quantile(dsBase.iqr[,i],0.75, na.rm=TRUE) + (IQR(dsBase.iqr[,i], na.rm=TRUE) * 1.5 )
min <- quantile(dsBase.iqr[,i],0.25, na.rm=TRUE) - (IQR(dsBase.iqr[,i], na.rm=TRUE) * 1.5 )
# Get the id's using which
idx <- which(dsBase.iqr[,i] < min | dsBase.iqr[,i] > max)
# Output the number of outliers in each variable
print(paste(i, length(idx), sep=''))
# Append the outliers list
Outliers <- c(Outliers, idx)
}
# Sort, I think it's always good to do this
Outliers <- sort(Outliers)
# Remove the outliers
dsBase.iqr <- dsBase.iqr[-Outliers,]
library(caret)
preObj <- preProcess(dsBase.iqr[, 3], method=c("center", "scale"))
newData <- predict(preObj, data[, -10])
smp_size <- floor(0.75 * nrow(dsBase.iqr))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(dsBase.iqr)), size = smp_size)
train <- dsBase.iqr[train_ind, ]
test <- dsBase.iqr[-train_ind, ]
names(data)
library(tree)
tree.model <- tree(score ~ street+lot+dep_stores+rest+shopping+hotel+art, data=train)
plot(tree.model)
text(tree.model, cex=.75)
pred<-predict(tree.model,test)
sqrt( sum( (pred - test$score)^2 , na.rm = TRUE ) / nrow(test) )
(sqrt( sum( (pred - test$score)^2 , na.rm = TRUE ) / nrow(test) ) - min(dsBase.iqr[,8]))/(max(dsBase.iqr[,8])-min(dsBase.iqr[,8]))
